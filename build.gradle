buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.6"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "se.transmode.gradle:gradle-docker:1.2"
        classpath 'com.h2database:h2:1.4.191'
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.1.2"
}

version "0.1"
group "canoon"

apply plugin:"maven"
apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
apply plugin:"docker"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.3.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.3.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.6"
    runtime "com.h2database:h2"
    runtime 'mysql:mysql-connector-java:5.1.36'
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    compile 'org.grails.plugins:spring-security-core:3.0.3'
    compile "org.grails.plugins:spring-security-rest:2.0.0.M2"
    compile 'org.ajbrown:NameMachine:0.1.1'
    compile "org.flywaydb:flyway-core:4.1.2"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}


assets {
    minifyJs = true
    minifyCss = true
}

String getDockerImageName() {
    "canoon-prod-api"
}

String getMysqlDockerImageName() {
    "canoon-mysql-db"
}

task buildDockerImage(type:Exec) {
    dependsOn build
    group = 'docker'
    description = 'Build a docker image'
    commandLine 'docker', 'build', '-f', 'build/docker/Dockerfile', '-t', "${dockerImageName}", 'build/docker'

    doFirst {
        println ">> Creating image: ${dockerImageName}"
        /* copy the generate war file to /build/docker/app */
        copy {
            from war.archivePath
            into 'build/docker/app/'
        }
        /* copy artifacts from src/main/docker/app into the build/docker/app */
        copy {
            from 'src/main/docker/app/'
            into 'build/docker/app'
        }
        /* copy Dockerfile from src/main/docker into the build/docker */
        copy {
            from('src/main/docker/') {
                include 'Dockerfile'
            }
            into 'build/docker'
        }
        /* rename war file to application.jar */
        file("build/docker/app/${war.archiveName}").renameTo("build/docker/app/application.jar")
    }
}

task devRun(type: Exec) {
    description "Running Production API container"
    dependsOn buildDockerImage
    commandLine 'docker', 'run', '-i', '-t', '-p', '8080:8080', '--name', 'prodapicontainer', "${dockerImageName}"
}


task buildMysqlImage(type: Exec) {
    description "Build mysql docker image"
    commandLine 'docker', 'build', '-f', 'build/docker/mysql/Dockerfile', '-t', "${mysqlDockerImageName}", 'build/docker/mysql'

    doFirst {
        println ">> Creating Mysql image: ${mysqlDockerImageName}"

        /* copy artifacts from src/main/docker/mysql into the build/docker/mysql */
        copy {
            from 'src/main/docker/mysql/'
            into 'build/docker/mysql'
        }
    }
}

task migrateDevelopment {
    description "Running production database migration"
    doFirst {
        flyway {
            url = 'jdbc:mysql://192.168.99.100:3306/canoon'
            user = 'admin'
            password = 'lionvstuna'
        }
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

migrateDevelopment.finalizedBy flywayMigrate
